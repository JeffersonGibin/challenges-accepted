{"version":3,"sources":["components/WeatherCard/icon-low.svg","components/WeatherCard/icon-high.svg","components/Search/icon-search.svg","components/Author/icon-heart.svg","favicon.ico","services/fahrenheitToCelsius.js","services/weatherForecastApi.js","components/ErrorMessage/index.js","components/Header/index.js","types/index.js","services/expandDayAbbr.js","components/WeatherCard/index.js","components/WeatherCardContainer/index.js","components/Search/index.js","services/splitList.js","components/CapitalRow/index.js","components/CapitalTable/index.js","components/Author/index.js","components/Footer/index.js","containers/AppContainer/index.js","index.js"],"names":["module","exports","__webpack_require__","p","fahrenheitToCelsius","temperature","Math","round","mountUrl","cityList","Array","isArray","citiesWhereClause","concat","join","woeidFilter","query","normalizeForecastData","data","city","location","region","country","forecastList","item","forecast","map","high","Number","low","currentTemperature","condition","temp","currentConditionText","text","windSpeed","wind","speed","windChill","chill","humidity","atmosphere","weatherForecastApi","getForecast","Promise","resolve","reject","fetch","then","response","json","result","count","channel","results","catch","ErrorMessage","props","react_default","a","createElement","className","message","Header","shape","string","isRequired","arrayOf","day","number","fullNames","SUN","MON","TUE","WED","THU","FRI","SAT","expandDayAbbr","abbreviation","toUpperCase","iconLow","require","iconHigh","WeatherCard","_ref","onClickClose","dataLoaded","Boolean","today","nextDays","slice","bundle","color","highlightColor","title","onClick","bundle_default","width","src","height","alt","key","data-order","WeatherCardContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","closeWeatherCard","bind","assertThisInitialized","loadForecast","nextProps","nextState","sameCity","sameForecast","prevProps","prevState","setState","_this2","done","arguments","length","undefined","forecasts","toString","src_components_ErrorMessage","src_components_WeatherCard","React","Component","Search","searchedTerm","handleChange","event","target","value","Route","render","history","onSubmit","preventDefault","push","handleSubmit","type","placeholder","pattern","required","autoFocus","defaultValue","onChange","splitList","list","firstChunk","secondChunk","CapitalRow","Link","to","CapitalTable","order","border","components_CapitalRow","defaultProps","Author","href","Footer","_splitList","src_components_CapitalTable","src_components_Author","favicon","AppContainer","capitalsForecasts","capitalsError","loadCapitalsForecasts","capitals","BrowserRouter","react_favicon_default","url","src_components_Header","path","match","document","params","components_WeatherCardContainer","src_components_Search","src_components_Footer","ReactDOM","src_containers_AppContainer","getElementById"],"mappings":"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","file":"static/js/main.339a17e1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-low.4c0f8edd.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-high.2191c1b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-search.87a42f03.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-heart.e22f6384.svg\";","module.exports = __webpack_public_path__ + \"static/media/favicon.59368f90.ico\";","function fahrenheitToCelsius(temperature) {\r\n    return Math.round((temperature - 32) * (5/9))\r\n}\r\n\r\nexport default fahrenheitToCelsius;\r\n","import fahrenheitToCelsius from './fahrenheitToCelsius';\r\n\r\nfunction getForecast(cityList) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(mountUrl(cityList))\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (!result || !result.query || !result.query.count) {\r\n                    return resolve(null);\r\n                }\r\n\r\n                const { channel } = result.query.results;\r\n                const channels = Array.isArray(channel) ? channel : [channel];\r\n\r\n                return channels.map(normalizeForecastData);\r\n            })\r\n            .then(resolve)\r\n            .catch(reject);\r\n    });\r\n};\r\n\r\nconst mountUrl = (cityList) => {\r\n    cityList = Array.isArray(cityList) ? cityList : [cityList];\r\n    \r\n    const citiesWhereClause = `text=\"${cityList.join('\" or text=\"')}\"`;\r\n    const woeidFilter = `select woeid from geo.places(1) where ${citiesWhereClause}`;\r\n    const query = `select * from weather.forecast where woeid in (${woeidFilter}) and u='c'`;\r\n\r\n    return `https://query.yahooapis.com/v1/public/yql?q=${query}&format=json`;\r\n};\r\n\r\nconst normalizeForecastData = (data) => ({\r\n    city: data.location.city,\r\n    region: data.location.region,\r\n    country: data.location.country,\r\n    forecastList: data.item.forecast.map(item => {\r\n        item.high = Number(item.high);\r\n        item.low = Number(item.low);\r\n        return item;\r\n    }),\r\n    currentTemperature: Number(data.item.condition.temp),\r\n    currentConditionText: data.item.condition.text,\r\n    windSpeed: Math.round(data.wind.speed),\r\n    windChill: fahrenheitToCelsius(data.wind.chill),\r\n    humidity: Number(data.atmosphere.humidity),\r\n});\r\n\r\nexport default { getForecast, mountUrl };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './index.css';\r\n\r\nconst ErrorMessage = (props) => (\r\n    <div className=\"error-message\">{props.message}</div>\r\n);\r\n\r\nErrorMessage.propTypes = {\r\n    message: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React from 'react';\r\n\r\nimport './index.css';\r\n\r\nconst Header = () => (\r\n    <header className=\"header\">\r\n        <h1 className=\"header__title\">Weather forecast</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;\r\n","import { string, number, shape, arrayOf } from 'prop-types';\r\n\r\nconst forecastDataType = shape({\r\n    city: string.isRequired,\r\n    region: string.isRequired,\r\n    country: string.isRequired,\r\n    forecastList: arrayOf(shape({\r\n        day: string.isRequired,\r\n        high: number.isRequired,\r\n        low: number.isRequired,\r\n        text: string.isRequired,\r\n    })).isRequired,\r\n    currentTemperature: number.isRequired,\r\n    currentConditionText: string.isRequired,\r\n    windSpeed: number.isRequired,\r\n    windChill: number.isRequired,\r\n    humidity: number.isRequired,\r\n});\r\n\r\nexport { forecastDataType };\r\n","const fullNames = {\r\n    SUN: 'Sunday',\r\n    MON: 'Monday',\r\n    TUE: 'Tuesday',\r\n    WED: 'Wednesday',\r\n    THU: 'Thursday',\r\n    FRI: 'Friday',\r\n    SAT: 'Saturday'\r\n};\r\n\r\nfunction expandDayAbbr (abbreviation) {\r\n    return fullNames[abbreviation.toUpperCase()] || null;\r\n}\r\n\r\nexport default expandDayAbbr;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { forecastDataType } from './../../types';\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\nimport expandDayAbbr from './../../services/expandDayAbbr';\r\n\r\nimport './index.css';\r\n\r\nconst iconLow = require('./icon-low.svg');\r\nconst iconHigh = require('./icon-high.svg');\r\n\r\nconst WeatherCard = ({ forecast, onClickClose }) => {\r\n    forecast = forecast || {};\r\n\r\n    const dataLoaded = Boolean(forecast.city);\r\n\r\n    const today = dataLoaded ? forecast.forecastList[0] : null;\r\n    const nextDays = dataLoaded ? forecast.forecastList.slice(1, 6) : null;\r\n\r\n    return (\r\n        <section className=\"weather-card\">\r\n            <SkeletonTheme color=\"#F1D5B2\" highlightColor=\"\">\r\n                <div className=\"weather-card__close\" title=\"Close\" onClick={onClickClose}>x</div>\r\n                <div className=\"weather-card__body\">\r\n                    <div className=\"weather-card__city app__skeleton\">\r\n                        {dataLoaded\r\n                            ? <span>{forecast.city}, {forecast.region} - {forecast.country}</span>\r\n                            : <Skeleton width={250}/>\r\n                        }\r\n                    </div>\r\n                    <h2 className=\"weather-card__temperature\">\r\n                        {dataLoaded ? `${forecast.currentTemperature}ºC` : <Skeleton/>}\r\n                        &nbsp;&nbsp;\r\n                        <span title={dataLoaded ? forecast.currentConditionText : ''}>\r\n                            {dataLoaded ? forecast.currentConditionText : <Skeleton/>}\r\n                        </span>\r\n                    </h2>\r\n                    <table className=\"weather-card__now\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td className=\"weather-card__now__first-column\">\r\n                                    {dataLoaded ? <img src={iconLow} width=\"12\" height=\"12\" alt=\"Low\"/> : ''}\r\n                                    {dataLoaded ? <b>{today.low}º</b> : <Skeleton width={45}/>}\r\n                                    &nbsp;&nbsp;&nbsp;\r\n                                    {dataLoaded ? <img src={iconHigh} width=\"12\" height=\"12\" alt=\"High\"/> : ''}\r\n                                    {dataLoaded ? <b>{today.high}º</b> : <Skeleton width={45}/>}\r\n                                </td>\r\n                                <td>\r\n                                    {dataLoaded\r\n                                        ? <span>Wind chill <b>{forecast.windChill}ºC</b></span>\r\n                                        : <Skeleton width={120}/>\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    {dataLoaded\r\n                                        ? <span>Wind <b>{forecast.windSpeed}km/h</b></span>\r\n                                        : <Skeleton width={100}/>\r\n                                    }\r\n                                </td>\r\n                                <td>\r\n                                    {dataLoaded\r\n                                        ? <span>Humidity <b>{forecast.humidity}%</b></span>\r\n                                        : <Skeleton width={120}/>\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <table className=\"weather-card__footer\">\r\n                    <tbody>\r\n                        <tr>\r\n                            {dataLoaded\r\n                                ? (\r\n                                    nextDays.map((day, key) => (\r\n                                        <td className=\"weather-card__weekday\" key={key} data-order={key}>\r\n                                            <div>{expandDayAbbr(day.day)}</div>\r\n                                            <div className=\"weather-card__weekdays__temp\">\r\n                                                {day.low}º&nbsp;&nbsp;{day.high}º\r\n                                            </div>\r\n                                        </td>\r\n                                    ))\r\n                                ) : (\r\n                                    <td><Skeleton height={42}/></td>\r\n                                )\r\n                            }\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </SkeletonTheme>\r\n        </section>\r\n    );\r\n}\r\n\r\nWeatherCard.propTypes = {\r\n    forecast: forecastDataType,\r\n    onClickClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default WeatherCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport weatherForecastApi from './../../services/weatherForecastApi';\r\n\r\nimport ErrorMessage from './../../components/ErrorMessage';\r\nimport WeatherCard from './../WeatherCard';\r\n\r\nclass WeatherCardContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            forecast: null,\r\n            error: null,\r\n        };\r\n\r\n        this.closeWeatherCard = this.closeWeatherCard.bind(this);\r\n        this.loadForecast = this.loadForecast.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadForecast();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const sameCity = this.state.forecast && nextProps.city === this.state.forecast.city;\r\n        const sameForecast = nextState.forecast === this.state.forecast;\r\n        return sameCity && sameForecast ? false : true;\r\n    }\r\n    \r\n    componentDidUpdate(prevProps, prevState){\r\n        if (prevProps.city !== this.props.city) {\r\n            this.loadForecast();\r\n        }\r\n    }\r\n\r\n    closeWeatherCard() {\r\n        this.setState({ forecast: null });\r\n    }\r\n\r\n    loadForecast() {\r\n        this.setState({ forecast: null, error: null });\r\n        \r\n        const done = (forecast, error = null) => {\r\n            this.setState({ forecast, error });\r\n        };\r\n\r\n        weatherForecastApi.getForecast(this.props.city)\r\n            .then(forecasts => {\r\n                forecasts ? done(forecasts[0]) : done(null, 'City not found');\r\n            })\r\n            .catch(error => done(null, `Error: could not load weather card data.\\n(${error.toString()})`));\r\n    }\r\n    \r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage message={this.state.error}/>\r\n        }\r\n\r\n        return <WeatherCard forecast={this.state.forecast} onClickClose={this.closeWeatherCard}/>\r\n    }\r\n}\r\n\r\nWeatherCardContainer.propTypes = {\r\n    city: PropTypes.string.isRequired\r\n};\r\n\r\nexport default WeatherCardContainer;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport './index.css';\r\n\r\nconst Search = () => {\r\n    let searchedTerm = '';\r\n\r\n    function handleSubmit(event, history) {\r\n        event.preventDefault();\r\n\r\n        if (searchedTerm.length) {\r\n            history.push('/city/' + searchedTerm);\r\n        }\r\n    }\r\n\r\n    function handleChange(event) {\r\n        searchedTerm = event.target.value;\r\n    }\r\n\r\n    return (\r\n        <Route render={({ history }) => (\r\n            <section className=\"search-bar\">\r\n                <form className=\"search-bar__form\" onSubmit={(event) => handleSubmit(event, history)}>\r\n                    <input\r\n                        className=\"search-bar__input\"\r\n                        type=\"search\"\r\n                        placeholder=\"Search a city\"\r\n                        pattern=\".*\\S.*\"\r\n                        title=\"Must contain at least one non-empty character.\"\r\n                        required\r\n                        autoFocus\r\n                        defaultValue={searchedTerm}\r\n                        onChange={handleChange}/>\r\n                    <button className=\"search-bar__submit\" type=\"submit\" title=\"Search\">\r\n                        <img src={require('./icon-search.svg')} width=\"22\" height=\"22\" alt=\"Search\"/>\r\n                    </button>\r\n                </form>\r\n            </section>\r\n        )}/>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","function splitList(list) {\r\n    list = Array.isArray(list) ? list : [];\r\n    return {\r\n        firstChunk: list.slice(0, list.length/2),\r\n        secondChunk: list.slice(list.length/2),\r\n    };\r\n}\r\n\r\nexport default splitList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { forecastDataType } from './../../types';\r\n\r\nconst CapitalRow = ({ forecast }) => (\r\n    <tr>\r\n        <td className=\"capitals-column__temperature\">{forecast.forecastList[0].low}º</td>\r\n        <td className=\"capitals-column__temperature\">{forecast.forecastList[0].high}º</td>\r\n        <td><Link className=\"capitals-city__link\" to={`/city/${forecast.city}`}>{forecast.city}</Link></td>\r\n    </tr>\r\n);\r\n\r\nCapitalRow.propTypes = {\r\n    forecast: forecastDataType.isRequired,\r\n};\r\n\r\nexport default CapitalRow;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { forecastDataType } from './../../types';\r\n\r\nimport './index.css';\r\nimport CapitalRow from './../CapitalRow';\r\n\r\nconst CapitalTable = ({ order, forecasts }) => (\r\n    <div className=\"capitals__column-wrapper\" data-order={order}>\r\n        <table className=\"capitals__table\" border=\"0\">\r\n            <thead>\r\n                <tr>\r\n                    <th className=\"capitals-column__temperature\">Min</th>\r\n                    <th className=\"capitals-column__temperature\">Max</th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {forecasts.map((forecast, key) =>\r\n                    <CapitalRow key={key} forecast={forecast}/>\r\n                )}\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n);\r\n\r\nCapitalTable.propTypes = {\r\n    forecasts: PropTypes.arrayOf(forecastDataType).isRequired,\r\n    order: PropTypes.number.isRequired,\r\n};\r\n\r\nCapitalTable.defaultProps = {\r\n    order: 1,\r\n}\r\n    \r\nexport default CapitalTable;\r\n","import React from 'react';\r\n\r\nimport './index.css';\r\n\r\nconst Author = () => (\r\n    <div className=\"author\">\r\n        Made\r\n        with\r\n        <img className=\"author-heart\" src={require('./icon-heart.svg')} alt=\"Heart\" width=\"16\" height=\"16\"/>\r\n        by <a className=\"author-link\" href=\"https://blog.andersonmamede.com.br/\">Anderson Mamede</a>\r\n    </div>\r\n);\r\n\r\nexport default Author;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport splitList from './../../services/splitList';\r\nimport { forecastDataType } from './../../types';\r\n\r\nimport './index.css';\r\nimport CapitalTable from './../CapitalTable';\r\nimport Author from './../Author';\r\n\r\nconst Footer = ({ forecasts }) => {\r\n    const { firstChunk, secondChunk } = splitList(forecasts);\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <h3 className=\"footer__title\">Capitals</h3>\r\n            <div className=\"foooter__capitals\">\r\n                <CapitalTable order={1} forecasts={firstChunk}/>\r\n                <CapitalTable order={2} forecasts={secondChunk}/>\r\n            </div>\r\n            <Author/>\r\n        </footer>\r\n    );\r\n};\r\n\r\nFooter.propTypes = {\r\n    forecasts: PropTypes.arrayOf(forecastDataType)\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Route, BrowserRouter } from 'react-router-dom';\r\nimport Favicon from 'react-favicon';\r\nimport PropTypes from 'prop-types';\r\nimport weatherForecastApi from './../../services/weatherForecastApi';\r\n\r\nimport './index.css';\r\nimport ErrorMessage from './../../components/ErrorMessage';\r\nimport Header from './../../components/Header';\r\nimport WeatherCardContainer from './../../components/WeatherCardContainer';\r\nimport Search from './../../components/Search';\r\nimport Footer from './../../components/Footer';\r\n\r\nconst favicon = require('./../../favicon.ico');\r\n\r\nclass AppContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            capitalsForecasts: null,\r\n            capitalsError: null,\r\n        };\r\n\r\n        this.loadCapitalsForecasts = this.loadCapitalsForecasts.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCapitalsForecasts();\r\n    }\r\n\r\n    loadCapitalsForecasts() {\r\n        const done = (capitalsForecasts, capitalsError = null) => {\r\n            this.setState({ capitalsForecasts, capitalsError });\r\n        };\r\n\r\n        weatherForecastApi.getForecast(this.props.capitals)\r\n            .then(forecasts => {\r\n                forecasts ? done(forecasts) : done(null, 'Capitals forecasts not found');\r\n            })\r\n            .catch(error => done(null, `Error: could not load capitals.\\n(${error.toString()})`));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <div className=\"app\">\r\n                    <Favicon url={favicon}/>\r\n                    <div className=\"app__wrapper\">\r\n                        <Header/>\r\n                        <div className=\"app__main\">\r\n                            <Route path=\"/city/:city\" render={({ match }) => {\r\n                                document.title = `${match.params.city} - Weather forecast`;\r\n                                return <WeatherCardContainer city={match.params.city}/>\r\n                            }}/>\r\n                            <Search/>\r\n                        </div>\r\n                        {this.state.capitalsError &&  <ErrorMessage message={this.state.capitalsError}/>}\r\n                        {this.state.capitalsForecasts &&\r\n                            <Footer forecasts={this.state.capitalsForecasts}/>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nAppContainer.propTypes = {\r\n    capitals: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default AppContainer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport AppContainer from './containers/AppContainer';\n\nconst CAPITALS = [\n    'Brasília', 'Amsterdam', 'London', 'Dublin', 'Berlin',\n    'Tokyo', 'Lisbon', 'Paris', 'Brussels', 'Madrid'\n];\n\nReactDOM.render(\n    <AppContainer capitals={CAPITALS}/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}