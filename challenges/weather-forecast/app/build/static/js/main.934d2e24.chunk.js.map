{"version":3,"sources":["components/WeatherCard/icon-low.svg","components/WeatherCard/icon-high.svg","components/Search/icon-search.svg","components/Author/icon-heart.svg","services/fahrenheitToCelsius.js","services/weatherForecastApi.js","components/ErrorMessage/index.js","components/Header/index.js","services/expandDayAbbr.js","types/index.js","components/WeatherCard/index.js","components/Search/index.js","services/splitList.js","components/CapitalRow/index.js","components/CapitalTable/index.js","components/Author/index.js","components/Footer/index.js","containers/AppContainer/index.js","index.js"],"names":["module","exports","__webpack_require__","p","fahrenheitToCelsius","temperature","Math","round","mountUrl","cityList","Array","isArray","citiesWhereClause","concat","join","woeidFilter","query","normalizeForecastData","data","city","location","region","country","forecastList","item","forecast","map","high","Number","low","currentTemperature","condition","temp","currentConditionText","text","windSpeed","wind","speed","windChill","chill","humidity","atmosphere","weatherForecastApi","getForecast","Promise","resolve","reject","fetch","then","response","json","result","count","channel","results","catch","ErrorMessage","props","react_default","a","createElement","className","message","Header","fullNames","shape","string","isRequired","arrayOf","day","number","SUN","MON","TUE","WED","THU","FRI","SAT","expandDayAbbr","abbreviation","toUpperCase","iconLow","require","iconHigh","WeatherCard","_ref","onClickClose","today","nextDays","slice","onClick","src","width","height","alt","key","Search","onSubmit","searchedTerm","event","preventDefault","type","required","placeholder","pattern","title","defaultValue","onChange","target","value","splitList","list","firstChunk","length","secondChunk","CapitalRow","CapitalTable","forecasts","border","components_CapitalRow","Author","href","Footer","_splitList","src_components_CapitalTable","src_components_Author","AppContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","capitalsForecasts","capitalsError","weatherCardForecast","weatherCardError","showWeatherCard","bind","assertThisInitialized","closeWeatherCard","loadCapitalsForecasts","_this2","done","arguments","undefined","setState","capitals","error","toString","_this3","src_components_Header","src_components_ErrorMessage","src_components_WeatherCard","src_components_Search","src_components_Footer","React","Component","ReactDOM","render","src_containers_AppContainer","document","getElementById"],"mappings":"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","file":"static/js/main.934d2e24.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-low.4c0f8edd.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-high.2191c1b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-search.87a42f03.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-heart.f8c8fd29.svg\";","function fahrenheitToCelsius(temperature) {\r\n    return Math.round((temperature - 32) * (5/9))\r\n}\r\n\r\nexport default fahrenheitToCelsius;\r\n","import fahrenheitToCelsius from './fahrenheitToCelsius';\r\n\r\nfunction getForecast(cityList) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(mountUrl(cityList))\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (!result || !result.query || !result.query.count) {\r\n                    return resolve(null);\r\n                }\r\n\r\n                const { channel } = result.query.results;\r\n                const channels = Array.isArray(channel) ? channel : [channel];\r\n\r\n                return channels.map(normalizeForecastData);\r\n            })\r\n            .then(resolve)\r\n            .catch(reject);\r\n    });\r\n};\r\n\r\nconst mountUrl = (cityList) => {\r\n    cityList = Array.isArray(cityList) ? cityList : [cityList];\r\n    \r\n    const citiesWhereClause = `text=\"${cityList.join('\" or text=\"')}\"`;\r\n    const woeidFilter = `select woeid from geo.places(1) where ${citiesWhereClause}`;\r\n    const query = `select * from weather.forecast where woeid in (${woeidFilter}) and u='c'`;\r\n\r\n    return `https://query.yahooapis.com/v1/public/yql?q=${query}&format=json`;\r\n};\r\n\r\nconst normalizeForecastData = (data) => ({\r\n    city: data.location.city,\r\n    region: data.location.region,\r\n    country: data.location.country,\r\n    forecastList: data.item.forecast.map(item => {\r\n        item.high = Number(item.high);\r\n        item.low = Number(item.low);\r\n        return item;\r\n    }),\r\n    currentTemperature: Number(data.item.condition.temp),\r\n    currentConditionText: data.item.condition.text,\r\n    windSpeed: Math.round(data.wind.speed),\r\n    windChill: fahrenheitToCelsius(data.wind.chill),\r\n    humidity: Number(data.atmosphere.humidity),\r\n});\r\n\r\nexport default { getForecast, mountUrl };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './index.css';\r\n\r\nconst ErrorMessage = (props) => (\r\n    <div className=\"error-message\">{props.message}</div>\r\n);\r\n\r\nErrorMessage.propTypes = {\r\n    message: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React from 'react';\r\n\r\nimport './index.css';\r\n\r\nconst Header = () => (\r\n    <header className=\"header\">\r\n        <h1 className=\"header__title\">Weather forecast</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;\r\n","const fullNames = {\r\n    SUN: 'Sunday',\r\n    MON: 'Monday',\r\n    TUE: 'Tuesday',\r\n    WED: 'Wednesday',\r\n    THU: 'Thursday',\r\n    FRI: 'Friday',\r\n    SAT: 'Saturday'\r\n};\r\n\r\nfunction expandDayAbbr (abbreviation) {\r\n    return fullNames[abbreviation.toUpperCase()] || null;\r\n}\r\n\r\nexport default expandDayAbbr;\r\n","import { string, number, shape, arrayOf, oneOf } from 'prop-types';\r\n\r\nconst forecastDataType = shape({\r\n    city: string.isRequired,\r\n    region: string.isRequired,\r\n    country: string.isRequired,\r\n    forecastList: arrayOf(shape({\r\n        day: string.isRequired,\r\n        high: number.isRequired,\r\n        low: number.isRequired,\r\n        text: string.isRequired,\r\n    })).isRequired,\r\n    currentTemperature: number.isRequired,\r\n    currentConditionText: string.isRequired,\r\n    windSpeed: number.isRequired,\r\n    windChill: number.isRequired,\r\n    humidity: number.isRequired,\r\n});\r\n\r\nexport { forecastDataType };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { forecastDataType } from './../../types';\r\nimport expandDayAbbr from './../../services/expandDayAbbr';\r\n\r\nimport './index.css';\r\n\r\nconst iconLow = require('./icon-low.svg');\r\nconst iconHigh = require('./icon-high.svg');\r\n\r\nconst WeatherCard = ({ forecast, onClickClose }) => {\r\n    const today = forecast.forecastList[0];\r\n    const nextDays = forecast.forecastList.slice(1, 6);\r\n\r\n    return (\r\n        <section className=\"weather-card\">\r\n            <div className=\"weather-card__close\" onClick={onClickClose}>x</div>\r\n            <div className=\"weather-card__body\">\r\n                <div className=\"weather-card__city\">{forecast.city}, {forecast.region} - {forecast.country}</div>\r\n                <h2 className=\"weather-card__temperature\">\r\n                    {forecast.currentTemperature}ºC&nbsp;&nbsp;{forecast.currentConditionText}\r\n                </h2>\r\n                <table className=\"weather-card__now\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className=\"weather-card__now__first-column\">\r\n                                <img src={iconLow} width=\"12\" height=\"12\" alt=\"Low\"/><b>{today.low}º</b>\r\n                                &nbsp;&nbsp;&nbsp;\r\n                                <img src={iconHigh} width=\"12\" height=\"12\" alt=\"High\"/><b>{today.high}º</b>\r\n                            </td>\r\n                            <td className=\"weather-card__now__second-column\">\r\n                                Wind chill <b>{forecast.windChill}ºC</b>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Wind <b>{forecast.windSpeed}km/h</b></td>\r\n                            <td>Humidity <b>{forecast.humidity}%</b></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <table className=\"weather-card__footer\">\r\n                <tbody>\r\n                    <tr>\r\n                        {nextDays.map((day, key) => (\r\n                            <td key={key}>\r\n                                <div>{expandDayAbbr(day.day)}</div>\r\n                                <span className=\"weather-card__weekdays__temp\">{day.low}º&nbsp;&nbsp;{day.high}º</span>\r\n                            </td>\r\n                        ))}\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </section>\r\n    );\r\n}\r\n\r\nWeatherCard.propTypes = {\r\n    forecast: forecastDataType.isRequired,\r\n    onClickClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default WeatherCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './index.css';\r\n\r\nconst Search = ({ onSubmit }) => {\r\n    let searchedTerm = 'Amsterdam';\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        onSubmit(searchedTerm);\r\n    }\r\n\r\n    return (\r\n        <section className=\"search-bar\">\r\n            <form className=\"search-bar__form\" onSubmit={handleSubmit}>\r\n                <input\r\n                    className=\"search-bar__input\"\r\n                    type=\"search\"\r\n                    required\r\n                    placeholder=\"Search a city\"\r\n                    pattern=\".*\\S.*\"\r\n                    title=\"Must contain at least one non-empty character.\"\r\n                    defaultValue={searchedTerm}\r\n                    onChange={(event) => (searchedTerm = event.target.value)}/>\r\n                <button className=\"search-bar__submit\" type=\"submit\" title=\"Search\">\r\n                    <img src={require('./icon-search.svg')} width=\"22\" height=\"22\" alt=\"Search\"/>\r\n                </button>\r\n            </form>\r\n        </section>\r\n    );\r\n};\r\n\r\nSearch.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Search;\r\n","function splitList(list) {\r\n    list = Array.isArray(list) ? list : [];\r\n    return {\r\n        firstChunk: list.slice(0, list.length/2),\r\n        secondChunk: list.slice(list.length/2),\r\n    };\r\n}\r\n\r\nexport default splitList;\r\n","import React from 'react';\r\nimport { forecastDataType } from './../../types';\r\n\r\nconst CapitalRow = ({ forecast }) => (\r\n    <tr>\r\n        <td>{forecast.forecastList[0].low}º</td>\r\n        <td>{forecast.forecastList[0].high}º</td>\r\n        <td>{forecast.city}</td>\r\n    </tr>\r\n);\r\n\r\nCapitalRow.propTypes = {\r\n    forecast: forecastDataType.isRequired,\r\n};\r\n\r\nexport default CapitalRow;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { forecastDataType } from './../../types';\r\n\r\nimport './index.css';\r\nimport CapitalRow from './../CapitalRow';\r\n\r\nconst CapitalTable = ({ forecasts }) => (\r\n    <div className=\"capitals__column-wrapper\">\r\n        <table className=\"capitals__table\" border=\"0\">\r\n            <thead>\r\n                <tr>\r\n                    <th className=\"capitals__table-temp__header\">Min</th>\r\n                    <th className=\"capitals__table-temp__header\">Max</th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {forecasts.map((forecast, key) =>\r\n                    <CapitalRow key={key} forecast={forecast}/>\r\n                )}\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n);\r\n\r\nCapitalTable.propTypes = {\r\n    forecasts: PropTypes.arrayOf(forecastDataType).isRequired,\r\n};\r\n\r\nexport default CapitalTable;\r\n","import React from 'react';\r\n\r\nimport './index.css';\r\n\r\nconst Author = () => (\r\n    <div className=\"author\">\r\n        Made\r\n        with\r\n        <img className=\"author-heart\" src={require('./icon-heart.svg')} alt=\"Heart\" width=\"16\" height=\"16\"/>\r\n        by <a className=\"author-link\" href=\"https://blog.andersonmamede.com.br/\">Anderson Mamede</a>\r\n    </div>\r\n);\r\n\r\nexport default Author;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport splitList from './../../services/splitList';\r\nimport { forecastDataType } from './../../types';\r\n\r\nimport './index.css';\r\nimport CapitalTable from './../CapitalTable';\r\nimport Author from './../Author';\r\n\r\nconst Footer = ({ forecasts }) => {\r\n    const { firstChunk, secondChunk } = splitList(forecasts);\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <h3 className=\"footer__title\">Capitals</h3>\r\n            <div className=\"foooter__capitals\">\r\n                <CapitalTable forecasts={firstChunk}/>\r\n                <CapitalTable forecasts={secondChunk}/>\r\n            </div>\r\n            <Author/>\r\n        </footer>\r\n    );\r\n};\r\n\r\nFooter.propTypes = {\r\n    forecasts: PropTypes.arrayOf(forecastDataType)\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport weatherForecastApi from './../../services/weatherForecastApi';\r\n\r\nimport './index.css';\r\nimport ErrorMessage from './../../components/ErrorMessage';\r\nimport Header from './../../components/Header';\r\nimport WeatherCard from './../../components/WeatherCard';\r\nimport Search from './../../components/Search';\r\nimport Footer from './../../components/Footer';\r\n\r\nclass AppContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            capitalsForecasts: null,\r\n            capitalsError: null,\r\n            weatherCardForecast: null,\r\n            weatherCardError: null\r\n        };\r\n\r\n        this.showWeatherCard = this.showWeatherCard.bind(this);\r\n        this.closeWeatherCard = this.closeWeatherCard.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCapitalsForecasts();\r\n    }\r\n\r\n    loadCapitalsForecasts() {\r\n        const done = (capitalsForecasts, capitalsError = null) => {\r\n            this.setState({ capitalsForecasts, capitalsError });\r\n        };\r\n\r\n        weatherForecastApi.getForecast(this.props.capitals)\r\n            .then(forecasts => {\r\n                forecasts ? done(forecasts) : done(null, 'Capitals forecasts not found');\r\n            })\r\n            .catch(error => done(null, `Error: could not load capitals.\\n(${error.toString()})`));\r\n    }\r\n\r\n    showWeatherCard(city) {\r\n        const done = (weatherCardForecast, weatherCardError = null) => {\r\n            this.setState({ weatherCardForecast, weatherCardError });\r\n        };\r\n\r\n        weatherForecastApi.getForecast(city)\r\n            .then(forecasts => {\r\n                forecasts ? done(forecasts[0]) : done(null, 'City not found');\r\n            })\r\n            .catch(error => done(null, `Error: could not load weather card data.\\n(${error.toString()})`));\r\n    }\r\n\r\n    closeWeatherCard() {\r\n        this.setState({ weatherCardForecast: null });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <div className=\"app__wrapper\">\r\n                    <Header/>\r\n                    <main className=\"app__main\">\r\n                        {this.state.weatherCardError && <ErrorMessage message={this.state.weatherCardError}/>}\r\n                        {this.state.weatherCardForecast &&\r\n                            <WeatherCard\r\n                                forecast={this.state.weatherCardForecast}\r\n                                onClickClose={this.closeWeatherCard}/>\r\n                        }\r\n                        <Search onSubmit={this.showWeatherCard}/>\r\n                    </main>\r\n                    {this.state.capitalsError &&  <ErrorMessage message={this.state.capitalsError}/>}\r\n                    {this.state.capitalsForecasts &&\r\n                        <Footer forecasts={this.state.capitalsForecasts}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAppContainer.propTypes = {\r\n    capitals: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default AppContainer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport AppContainer from './containers/AppContainer';\r\n\r\nconst CAPITALS = [\r\n    'Brasília', 'Amsterdam', 'London', 'Dublin', 'Berlin',\r\n    'London', 'Lisbon', 'Paris', 'Brussels', 'Madrid'\r\n];\r\n\r\nReactDOM.render(\r\n    <AppContainer capitals={CAPITALS}/>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}